type LocalState {
  postListing(id: ID!): PostListing
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

""" Post """
type Post implements Node {
  id: ID!
  title: String!
  author: User!
}

""" connections """
type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge]!
  orderBy: PostOrdering!
}

type PostEdge {
  node: Post
  cursor: String!
}

type PostListing implements Node {
  id: ID!
  activeField: PostOrderingFields
  allOrderings: [PostOrdering!]!
}

type PostOrdering {
  field: PostOrderingFields!
  desc: Boolean!
  fieldDescription_ASC: String!
  fieldDescription_DESC: String!
}

enum PostOrderingFields {
  createdAt
  viewsCount
}

input PostOrderingInput {
  field: PostOrderingFields!
  desc: Boolean!
}

"""
Need this because currently it is impossible to
alias fragments directly like this:
    query {
      x: ...SomeFragment
      y: ...SomeFragment
    }
See https://github.com/facebook/relay/issues/1983 
"""
type PostSearch {
  posts(after: String, first: Int, before: String, last: Int, orderBy: PostOrderingInput): PostConnection
}

type Query {
  node(id: ID!): Node

  """
   XXX: rename to viewer
  see https://github.com/nodkz/example-fragments-relay/blob/master/schema.graphql
  """
  search: PostSearch
  localState: LocalState!
}

""" User """
type User implements Node {
  id: ID!
  name: String!
  posts(after: String, first: Int): PostConnection
}
