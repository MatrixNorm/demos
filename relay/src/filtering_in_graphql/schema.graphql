interface Node {
  id: ID!
}

type Notebook implements Node {
  id: ID!
  manufacturer: NotebookManufacturer!
  price: Float!
  cpu: CpuModel!
  videoCardModel: VideoCardModel!
  videoCartType: VideoCartType
  weight: Float!
  displayDiagonal: Float!
}

enum NotebookManufacturer {
  Acer
  Asus
  HP
  Lenovo
}

type CpuModel {
  series: CpuSeries
}

emum CpuManufacturer { 
  Intel
  AMD
}

type RangeFilter {
  lower: Float!
  inludeLower: Boolean!
  upper: Float!
  includeUpper: Boolean!
}

type LowerBoundFilter {
  value: Float!
  include: Boolean
}

type UpperBoundFilter {
  value: Float!
  include: Boolean
}

type LogicalFilter {
  operator: BooleanOperator!
  operands: [Filter!]!
}

enum BooleanOperator {
  Or
  And
}

type Filter = LogicalFilter | RangeFilter | LowerBoundFilter | UpperBoundFilter