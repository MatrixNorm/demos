# this type allows for incorrect
# values e.g.
# {value: "a", draft: null, error: "should be null"}
#
type UIStringFieldState {
  value: String
  draft: String
  error: String
}

type UIIntFieldState {
  value: Int
  draft: Int
  error: String
}

extend type Query {
  uiState: UIState
}

type UIState {
  citySearchParams: UICitySearchParams
  notifications: [UINotification!]
  userSettingsEditDelta: UIUserSettingsDelta
  userSettingsOptimisticDelta: UIUserSettingsDelta
}

type UICitySearchParams {
  countryNameContains: UIStringFieldState
  populationGte: UIIntFieldState
  populationLte: UIIntFieldState
}

type UINotification implements Node {
  id: ID!
  kind: UINotificationKind!
  text: String!
}

enum UINotificationKind {
  INFO
  ERROR
}

type UIUserSettingsDelta {
  citiesPaginationPageSize: Int
  foo: String
  bar: Int
}
