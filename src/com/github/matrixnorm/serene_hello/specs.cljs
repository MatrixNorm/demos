;;;; Serene
;;; com.paren/serene
;;; https://github.com/paren-com/serene
;;; Generate clojure.spec with GraphQL and extend GraphQL with clojure.spec
;;;
;;; DO NOT EDIT THIS FILE!

(ns com.github.matrixnorm.serene-hello.specs (:require [clojure.core] [clojure.spec.alpha]))

(clojure.spec.alpha/def :com.github.matrixnorm.serene-hello.specs/String clojure.core/string?)

(clojure.spec.alpha/def :com.github.matrixnorm.serene-hello.specs.Query.hello/&args
  (clojure.spec.alpha/keys :opt-un [] :req-un []))

(clojure.spec.alpha/def :com.github.matrixnorm.serene-hello.specs/Boolean clojure.core/boolean?)

(clojure.spec.alpha/def :com.github.matrixnorm.serene-hello.specs.Query.__typename/&args
  (clojure.spec.alpha/keys :opt-un [] :req-un []))

(clojure.spec.alpha/def :com.github.matrixnorm.serene-hello.specs.Query/__typename #{"Query"})

(clojure.spec.alpha/def :com.github.matrixnorm.serene-hello.specs/Query
  (clojure.spec.alpha/keys
   :opt-un
   [:com.github.matrixnorm.serene-hello.specs.Query/hello
    :com.github.matrixnorm.serene-hello.specs.Query/__typename]))

(clojure.spec.alpha/def :com.github.matrixnorm.serene-hello.specs.Query/hello
  (clojure.spec.alpha/nilable :com.github.matrixnorm.serene-hello.specs/String))

(clojure.spec.alpha/def :com.github.matrixnorm.serene-hello.specs/Float clojure.core/float?)

(clojure.spec.alpha/def :com.github.matrixnorm.serene-hello.specs/ID clojure.core/string?)

(clojure.spec.alpha/def :com.github.matrixnorm.serene-hello.specs/Int clojure.core/integer?)

(clojure.spec.alpha/def :gql/Boolean :com.github.matrixnorm.serene-hello.specs/Boolean)

(clojure.spec.alpha/def :gql/Float :com.github.matrixnorm.serene-hello.specs/Float)

(clojure.spec.alpha/def :gql/ID :com.github.matrixnorm.serene-hello.specs/ID)

(clojure.spec.alpha/def :gql/Int :com.github.matrixnorm.serene-hello.specs/Int)

(clojure.spec.alpha/def :gql/Query :com.github.matrixnorm.serene-hello.specs/Query)

(clojure.spec.alpha/def :gql/String :com.github.matrixnorm.serene-hello.specs/String)

(clojure.spec.alpha/def :gql.Query/__typename
  :com.github.matrixnorm.serene-hello.specs.Query/__typename)

(clojure.spec.alpha/def :gql.Query/hello :com.github.matrixnorm.serene-hello.specs.Query/hello)

(clojure.spec.alpha/def :gql.Query.__typename/&args
  :com.github.matrixnorm.serene-hello.specs.Query.__typename/&args)

(clojure.spec.alpha/def :gql.Query.hello/&args
  :com.github.matrixnorm.serene-hello.specs.Query.hello/&args)
